{"tool_name":"falcon_server","contents":["biotools","bioschemas"],"fetched_metadata":{"biotools":{"id":"falcon_server","home":"https://bitbucket.org/kloostermannerflab/workspace/projects/LOOP","summary":"a highly flexible open-source software for closed-loop neuroscience.\n\nOBJECTIVE:Closed-loop experiments provide unique insights into brain dynamics and function. To facilitate a wide range of closed-loop experiments, we created an open-source software platform that enables high-performance real-time processing of streaming experimental data. APPROACH:We wrote Falcon, a C++ multi-threaded software in which the user can load and execute an arbitrary processing graph. Each node of a Falcon graph is mapped to a single thread and nodes communicate with each other through thread-safe buffers. The framework allows for easy implementation of new processing nodes and data types. Falcon was tested both on a 32-core and a 4-core workstation","addition_date":"2020-09-03T18:43:59Z","last_update_date":"2020-09-08T14:45:40Z","collections":["KU Leuven","VIB","imec"]},"bioschemas":{"name":"Falcon Server","home":"https://bio.tools/falcon_server","summary":"a highly flexible open-source software for closed-loop neuroscience.\n\nOBJECTIVE:Closed-loop experiments provide unique insights into brain dynamics and function. To facilitate a wide range of closed-loop experiments, we created an open-source software platform that enables high-performance real-time processing of streaming experimental data. APPROACH:We wrote Falcon, a C++ multi-threaded software in which the user can load and execute an arbitrary processing graph. Each node of a Falcon graph is mapped to a single thread and nodes communicate with each other through thread-safe buffers. The framework allows for easy implementation of new processing nodes and data types. Falcon was tested both on a 32-core and a 4-core workstation","tool_type":"sc:SoftwareApplication"}}}