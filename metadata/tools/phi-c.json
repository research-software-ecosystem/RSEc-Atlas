{"tool_name":"phi-c","contents":["biotools","bioschemas"],"fetched_metadata":{"biotools":{"id":"phi-c","home":"https://github.com/soyashinkai/PHi-C","license":"GPL-3.0","summary":"PHi-C is deciphering Hi-C data into polymer dynamics.\n\nPHi-C consists of Python3 codes for deciphering Hi-C data into polymer dynamics simulations. The input is a contact matrix data generated from a hic file through Juicer. PHi-C assumes that a genomic region of interest at an appropriate resolution can be modeled using a polymer network model including attractive and repulsive interactions between monomers. Instead of finding optimized 3D conformations, PHi-C's optimization procedure provides optimal interaction parameters of the polymer network model. We can then reconstruct an optimized contact matrix. Finally, we can carry out polymer dynamics simulations of the polymer network model equipped with the optimal interaction parameters.","addition_date":"2021-03-19T09:04:27Z","last_update_date":"2021-03-28T09:24:23Z","tool_type":["Command-line tool"]},"bioschemas":{"name":"PHi-C","home":"https://bio.tools/phi-c","license":"GPL-3.0","summary":"PHi-C is deciphering Hi-C data into polymer dynamics.\n\nPHi-C consists of Python3 codes for deciphering Hi-C data into polymer dynamics simulations. The input is a contact matrix data generated from a hic file through Juicer. PHi-C assumes that a genomic region of interest at an appropriate resolution can be modeled using a polymer network model including attractive and repulsive interactions between monomers. Instead of finding optimized 3D conformations, PHi-C's optimization procedure provides optimal interaction parameters of the polymer network model. We can then reconstruct an optimized contact matrix. Finally, we can carry out polymer dynamics simulations of the polymer network model equipped with the optimal interaction parameters.","tool_type":"sc:SoftwareApplication"}}}