{"tool_name":"multinanopolish","contents":["biotools","bioschemas"],"fetched_metadata":{"biotools":{"id":"multinanopolish","home":"https://github.com/BioinformaticsCSU/MultiNanopolish","license":"MIT","summary":"Refined grouping method for reducing redundant calculations in nanopolish.\n\nNanopolish is a software package for signal-level analysis of Oxford Nanopore sequencing data. Nanopolish can calculate an improved consensus sequence for a draft genome assembly, detect base modifications, call SNPs and indels with respect to a reference genome and more (see Nanopolish for more details).\n\nWe present an efficient implementation of Nanopolish, called MultiNanopolish. MultiNanopolish use a different iterative calculation strategy to reduce redundant calculations. We propose an abstract concept, namely independent computing unit(GroupTask) which can be distributed to the thread pool for multi-thread concurrent computing.","addition_date":"2021-03-19T09:05:38Z","last_update_date":"2021-04-11T11:16:24Z","tool_type":["Command-line tool"]},"bioschemas":{"name":"MultiNanopolish","home":"https://bio.tools/multinanopolish","license":"MIT","summary":"Refined grouping method for reducing redundant calculations in nanopolish.\n\nNanopolish is a software package for signal-level analysis of Oxford Nanopore sequencing data. Nanopolish can calculate an improved consensus sequence for a draft genome assembly, detect base modifications, call SNPs and indels with respect to a reference genome and more (see Nanopolish for more details).\n\nWe present an efficient implementation of Nanopolish, called MultiNanopolish. MultiNanopolish use a different iterative calculation strategy to reduce redundant calculations. We propose an abstract concept, namely independent computing unit(GroupTask) which can be distributed to the thread pool for multi-thread concurrent computing.","tool_type":"sc:SoftwareApplication"}}}