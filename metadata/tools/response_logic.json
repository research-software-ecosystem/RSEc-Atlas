{"tool_name":"response_logic","contents":["biotools","bioschemas"],"fetched_metadata":{"biotools":{"id":"response_logic","home":"http://github.com/GrossTor/response-logic","license":"GPL-3.0","summary":"> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'response logic projects', 'IMPLEMENTATION:A' | Robust network inference using response logic | A network inference method based on a simple response logic with minimal presumptions | Various projects that make use of the response logic approach | A network inference method based on a simple response logic with minimal presumptions. This is the Python package. Various response logic projects can be found in a dedicated repository | This repository holds various projects that make use of the response-logic approach to infer networks from perturbation response data. To run the scripts you need to install the response-logic python package. Once installed, simply download this repository and run the scripts with Python 3 as documented in a dedicated README found in each project subfolder. Particularly look into the toy_model project to learn how to use the response-logic package","addition_date":"2019-11-14T20:13:25Z","last_update_date":"2020-12-13T14:50:11Z"},"bioschemas":{"name":"response logic","home":"https://bio.tools/response_logic","license":"GPL-3.0","summary":"> VERY_LOW CONFIDENCE! | > CORRECT NAME OF TOOL COULD ALSO BE 'response logic projects', 'IMPLEMENTATION:A' | Robust network inference using response logic | A network inference method based on a simple response logic with minimal presumptions | Various projects that make use of the response logic approach | A network inference method based on a simple response logic with minimal presumptions. This is the Python package. Various response logic projects can be found in a dedicated repository | This repository holds various projects that make use of the response-logic approach to infer networks from perturbation response data. To run the scripts you need to install the response-logic python package. Once installed, simply download this repository and run the scripts with Python 3 as documented in a dedicated README found in each project subfolder. Particularly look into the toy_model project to learn how to use the response-logic package","tool_type":"sc:SoftwareApplication"}}}