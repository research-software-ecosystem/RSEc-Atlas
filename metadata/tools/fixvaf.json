{"tool_name":"fixvaf","contents":["biotools","bioschemas"],"fetched_metadata":{"biotools":{"id":"FixVAF","home":"https://github.com/danchubb/FixVAF","summary":"Correcting reference bias from the Illumina Isaac aligner enables analysis of cancer genomes.\n\nCode to remove bias from Isaac aligned data by clipping all reads for variant positions by 5 bases and producing a modified vcf file.\n\nSupport code for NGS copy number algorithms. Takes a file of locations and a [cr:b]am file and generates a count of coverage of each allele [ACGT] at that location (given any filter settings). Altered so that it clips all reads by n bases to reduce reference bias.\n\npython FixVaf.py [vcf file] [bam file] [fasta file].\n\nThe alleleCount package primarily exists to prevent code duplication between some other projects, specifically AscatNGS and Battenberg.\n\nRequires python 3 with psam installed.\n\nThe project previously contained 2 equivalent implementations of allele counting code in perl and C for BAM CRAM processing","addition_date":"2020-01-14T09:02:11Z","last_update_date":"2020-12-28T20:50:21Z","tool_type":["Command-line tool"]},"bioschemas":{"name":"FixVAF","home":"https://bio.tools/FixVAF","summary":"Correcting reference bias from the Illumina Isaac aligner enables analysis of cancer genomes.\n\nCode to remove bias from Isaac aligned data by clipping all reads for variant positions by 5 bases and producing a modified vcf file.\n\nSupport code for NGS copy number algorithms. Takes a file of locations and a [cr:b]am file and generates a count of coverage of each allele [ACGT] at that location (given any filter settings). Altered so that it clips all reads by n bases to reduce reference bias.\n\npython FixVaf.py [vcf file] [bam file] [fasta file].\n\nThe alleleCount package primarily exists to prevent code duplication between some other projects, specifically AscatNGS and Battenberg.\n\nRequires python 3 with psam installed.\n\nThe project previously contained 2 equivalent implementations of allele counting code in perl and C for BAM CRAM processing","tool_type":"sc:SoftwareApplication"}}}