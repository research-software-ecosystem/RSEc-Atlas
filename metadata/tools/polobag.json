{"tool_name":"polobag","contents":["biotools","bioschemas"],"fetched_metadata":{"biotools":{"id":"polobag","home":"https://github.com/gourabghoshroy/PoLoBag","license":"GPL-2.0","summary":"Polynomial Lasso Bagging for signed gene regulatory network inference from expression data.\n\nPOLYNOMIAL LASSO BAGGING ALGORITHM FOR SIGNED GENE REGULATORY NETWORK INFERENCE.\n\nCode : The Python file PoLoBag.py can be run in Python 3.x (for Python 2.x just change the part for writing output to file at the end). Here degree d = 2 in the algorithm. Before running change the infilename parameter as per your static gene expression filename. The output will be a sorted edge list. The first column denotes regulator, the second column denotes target gene and the third column is a signed edge weight. The weights are normalized to have a maximum absolute value of 1. Edges with non-zero weights are sorted in the output list based on the absolute value of these weights.","addition_date":"2021-01-18T10:02:32Z","last_update_date":"2021-01-24T14:48:59Z"},"bioschemas":{"name":"PoLoBag","home":"https://bio.tools/polobag","license":"GPL-2.0","summary":"Polynomial Lasso Bagging for signed gene regulatory network inference from expression data.\n\nPOLYNOMIAL LASSO BAGGING ALGORITHM FOR SIGNED GENE REGULATORY NETWORK INFERENCE.\n\nCode : The Python file PoLoBag.py can be run in Python 3.x (for Python 2.x just change the part for writing output to file at the end). Here degree d = 2 in the algorithm. Before running change the infilename parameter as per your static gene expression filename. The output will be a sorted edge list. The first column denotes regulator, the second column denotes target gene and the third column is a signed edge weight. The weights are normalized to have a maximum absolute value of 1. Edges with non-zero weights are sorted in the output list based on the absolute value of these weights.","tool_type":"sc:SoftwareApplication"}}}