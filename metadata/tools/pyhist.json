{"tool_name":"pyhist","contents":["biotools","bioschemas"],"fetched_metadata":{"biotools":{"id":"pyhist","home":"https://github.com/manuel-munoz-aguirre/PyHIST","license":"GPL-3.0","summary":"PyHIST is a Histological Image Segmentation Tool: a lightweight semi-automatic pipeline to extract tiles with foreground content from SVS histopathology whole image slides (with experimental support for other formats). It is intended to be an easy-to-use tool to preprocess histological image data for usage in machine learning tasks. The PyHIST pipeline involves three main steps: 1) produce a mask for the input WSI that differentiates the tissue from the background, 2) create a grid of tiles on top of the mask, evaluate each tile to see if it meets the minimum content threshold to be considered as foreground and 3) extract the selected tiles from the input WSI at the requested resolution.","addition_date":"2021-01-18T09:00:06Z","last_update_date":"2021-03-23T13:37:51Z","version":["1.0.0"],"collections":["RIS3CAT VEIS"]},"bioschemas":{"name":"PyHIST","home":"https://bio.tools/pyhist","license":"GPL-3.0","version":"1.0.0","summary":"PyHIST is a Histological Image Segmentation Tool: a lightweight semi-automatic pipeline to extract tiles with foreground content from SVS histopathology whole image slides (with experimental support for other formats). It is intended to be an easy-to-use tool to preprocess histological image data for usage in machine learning tasks. The PyHIST pipeline involves three main steps: 1) produce a mask for the input WSI that differentiates the tissue from the background, 2) create a grid of tiles on top of the mask, evaluate each tile to see if it meets the minimum content threshold to be considered as foreground and 3) extract the selected tiles from the input WSI at the requested resolution.","tool_type":"sc:SoftwareApplication"}}}