{"tool_name":"zga","contents":["biotools","bioschemas","biocontainers"],"fetched_metadata":{"biocontainers":{"name":"zga","identifiers":["biotools:zga"],"license":"Not available","summary":"Prokaryotic genome assembly and annotation pipeline"},"biotools":{"id":"zga","home":"https://github.com/laxeye/zga/","summary":"Prokaryotic genome assembly and annotation pipeline.\n\nWide range of supported reads: Illumina, Oxford Nanopore, PacBio, BGI.\nShort read multi-threaded processing: QC, filtering, trimming, overlapped pairs merging.\nAssembling from short reads, long reads or hybrid assembly using modern and powerful assemblers: SPAdes, Unicycler or Flye.\nQuality control of assembly: completeness and contamination assessment with CheckM as well as PhiX detection.\nFast annotation of bacterial and archeal genome assemblies with DFAST .\nNo High Performance Computing needed. The pipeline works on laptop or desktop.","addition_date":"2021-01-07T11:13:34Z","last_update_date":"2021-01-07T11:13:34Z","tool_type":["Command-line tool"],"version":["0.0.8"]},"bioschemas":{"name":"zga","home":"https://bio.tools/zga","version":"0.0.8","summary":"Prokaryotic genome assembly and annotation pipeline.\n\nWide range of supported reads: Illumina, Oxford Nanopore, PacBio, BGI.\nShort read multi-threaded processing: QC, filtering, trimming, overlapped pairs merging.\nAssembling from short reads, long reads or hybrid assembly using modern and powerful assemblers: SPAdes, Unicycler or Flye.\nQuality control of assembly: completeness and contamination assessment with CheckM as well as PhiX detection.\nFast annotation of bacterial and archeal genome assemblies with DFAST .\nNo High Performance Computing needed. The pipeline works on laptop or desktop.","tool_type":"sc:SoftwareApplication"}}}