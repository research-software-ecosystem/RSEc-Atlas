{"tool_name":"mbg","contents":["biotools","bioschemas","biocontainers"],"fetched_metadata":{"biocontainers":{"name":"mbg","identifiers":["doi:10.1101/2020.09.18.303156"],"license":"MIT","summary":"Minimizer based sparse de Bruijn graph constructor"},"biotools":{"id":"mbg","home":"https://anaconda.org/bioconda/mbg","license":"MIT","summary":"Minimizer-based Sparse de Bruijn Graph Construction.\n\nMinimizer based sparse de Bruijn Graph constructor. Homopolymer compress input sequences, pick syncmers from hpc-compressed sequences, connect syncmers with an edge if they are adjacent in a read, unitigify. Suggested input is PacBio HiFi/CCS reads. May or may not work with Illumina reads. Algorithmic details: https://www.biorxiv.org/content/10.1101/2020.09.18.303156v1.","addition_date":"2021-01-18T10:51:14Z","last_update_date":"2021-02-20T17:25:25Z","tool_type":["Command-line tool","Library"]},"bioschemas":{"name":"MBG","home":"https://bio.tools/mbg","license":"MIT","summary":"Minimizer-based Sparse de Bruijn Graph Construction.\n\nMinimizer based sparse de Bruijn Graph constructor. Homopolymer compress input sequences, pick syncmers from hpc-compressed sequences, connect syncmers with an edge if they are adjacent in a read, unitigify. Suggested input is PacBio HiFi/CCS reads. May or may not work with Illumina reads. Algorithmic details: https://www.biorxiv.org/content/10.1101/2020.09.18.303156v1.","tool_type":"sc:SoftwareApplication"}}}