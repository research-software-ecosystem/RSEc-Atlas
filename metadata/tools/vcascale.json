{"tool_name":"vcascale","contents":["biotools","bioschemas"],"fetched_metadata":{"biotools":{"id":"vcascale","home":"https://github.com/abs-tudelft/variant-calling-at-scale","license":"Apache-2.0","summary":"Variant Calling at Scale is a scalable, parallel and efficient implementation of next generation sequencing data pre-processing and variant calling workflows. Our design tightly integrates most pre-processing workflow stages, using Spark built-in functions to sort reads by coordinates, and mark duplicates efficiently. A cluster scaled DeepVariant for both CPU-only and CPU+GPU clusters is also integrated in this workflow.","addition_date":"2022-01-21T00:30:21.015496Z","last_update_date":"2022-01-21T00:30:21.017975Z","tool_type":["Command-line tool"]},"bioschemas":{"name":"VCaScale","home":"https://bio.tools/vcascale","license":"Apache-2.0","summary":"Variant Calling at Scale is a scalable, parallel and efficient implementation of next generation sequencing data pre-processing and variant calling workflows. Our design tightly integrates most pre-processing workflow stages, using Spark built-in functions to sort reads by coordinates, and mark duplicates efficiently. A cluster scaled DeepVariant for both CPU-only and CPU+GPU clusters is also integrated in this workflow.","tool_type":"sc:SoftwareApplication"}}}